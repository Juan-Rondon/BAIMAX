"""
üåê bAImax 2.0 - APLICACI√ìN WEB INTELIGENTE PARA CLASIFICACI√ìN M√âDICA
===================================================================

PROP√ìSITO DEL SISTEMA:
Aplicaci√≥n web completa que proporciona una interfaz accesible para ciudadanos
y profesionales de salud para interactuar con el sistema de clasificaci√≥n
de gravedad m√©dica mediante m√∫ltiples interfaces: web tradicional y chatbot.

JUSTIFICACI√ìN EN EL PROYECTO:
- Democratiza el acceso a triada m√©dica automatizada
- Proporciona m√∫ltiples canales de interacci√≥n (web + chat)
- Integra todos los m√≥dulos bAImax en una experiencia unificada
- Permite recolecci√≥n continua de datos para mejora del sistema

ARQUITECTURA DE LA APLICACI√ìN:
üèóÔ∏è DISE√ëO MODULAR:
1. Interfaz Web: Formularios estructurados para datos m√©dicos
2. Chatbot Conversacional: Interacci√≥n natural en espa√±ol
3. Sistema de Aprendizaje: Mejora continua basada en feedback
4. Visualizaciones: Dashboards y mapas de an√°lisis epidemiol√≥gico
5. API de Predicci√≥n: Endpoint para clasificaci√≥n en tiempo real

COMPONENTES INTEGRADOS:
- baimax_core: Clasificador ML principal (94.5% precisi√≥n)
- baimax_chatbot: Motor conversacional en espa√±ol m√©dico
- baimax_learning: Sistema de aprendizaje continuo
- baimax_mapas: Visualizaci√≥n geoespacial de problemas
- baimax_graficas: Dashboards anal√≠ticos interactivos
- baimax_recomendaciones: Motor de sugerencias inteligentes

INNOVACIONES IMPLEMENTADAS:
- Interfaz biling√ºe (t√©cnico/ciudadano)
- Sesiones persistentes para seguimiento de casos
- An√°lisis en tiempo real de patrones epidemiol√≥gicos
- Integraci√≥n con bases de datos del MinSalud
- Sistema de alertas para casos cr√≠ticos

CASOS DE USO:
üë©‚Äç‚öïÔ∏è PERSONAL M√âDICO: Triada r√°pida de casos urgentes
üë®‚Äçüíº ADMINISTRADORES: An√°lisis de patrones y recursos
üë§ CIUDADANOS: Autoevaluaci√≥n y orientaci√≥n m√©dica
üèõÔ∏è INSTITUCIONES: Monitoreo epidemiol√≥gico en tiempo real

Desarrollado para IBM SENASOFT 2025 - Categor√≠a Inteligencia Artificial
"""

# =============================================================================
# IMPORTACIONES Y DEPENDENCIAS DEL SISTEMA WEB
# =============================================================================

# Librer√≠as del sistema y manipulaci√≥n de datos
import pandas as pd                    # Manejo de datasets m√©dicos
import webbrowser                      # Apertura autom√°tica del navegador
import os                             # Operaciones del sistema operativo
import json                           # Serializaci√≥n de datos de sesiones
from datetime import datetime         # Timestamping de interacciones m√©dicas
import threading                      # Manejo de m√∫ltiples sesiones concurrentes
import time                          # Control de timeouts y delays

# =============================================================================
# IMPORTACI√ìN DE M√ìDULOS BAIMAX - ARQUITECTURA MODULAR
# =============================================================================
# JUSTIFICACI√ìN: Cada m√≥dulo maneja un aspecto espec√≠fico del sistema m√©dico

from core.baimax_core import bAImaxClassifier, bAImaxAnalyzer      # Motor de clasificaci√≥n ML
from visualizations.baimax_mapas import bAImaxMapa                # Visualizaci√≥n geoespacial
from visualizations.baimax_graficas import bAImaxGraficas         # Dashboards anal√≠ticos  
from core.baimax_recomendaciones import bAImaxRecomendaciones     # Sistema de sugerencias
from chatbot.baimax_chatbot import bAImaxChatbot                  # Motor conversacional
from core.baimax_learning import bAImaxLearningSystem            # Aprendizaje continuo

# =============================================================================
# CLASE PRINCIPAL DE LA APLICACI√ìN WEB INTELIGENTE
# =============================================================================

class bAImaxApp20:
    """
    üåê APLICACI√ìN WEB PRINCIPAL - N√öCLEO DE INTERACCI√ìN CON USUARIOS
    ===============================================================
    
    PROP√ìSITO:
    Orquesta todos los componentes del sistema bAImax en una aplicaci√≥n web
    unificada que permite interacci√≥n m√∫ltiple: formularios web, chatbot
    conversacional y dashboards anal√≠ticos.
    
    JUSTIFICACI√ìN ARQUITECT√ìNICA:
    - Patr√≥n MVC: Controlador principal que coordina vista y modelo
    - Microservicios internos: Cada componente es independiente y reutilizable
    - Estado de sesi√≥n: Mantiene contexto de conversaciones m√©dicas
    - Escalabilidad: Dise√±o preparado para m√∫ltiples usuarios concurrentes
    
    RESPONSABILIDADES PRINCIPALES:
    1. üéÆ CONTROL DE SESIONES: Manejo de m√∫ltiples usuarios simult√°neos
    2. üîÑ ORQUESTACI√ìN: Coordinaci√≥n entre todos los m√≥dulos bAImax
    3. üåê INTERFAZ WEB: Generaci√≥n din√°mica de HTML responsive
    4. üí¨ CHATBOT: Motor conversacional m√©dico en espa√±ol
    5. üìä ANALYTICS: Integraci√≥n de visualizaciones y reportes
    6. üîí SEGURIDAD: Validaci√≥n de inputs y sanitizaci√≥n de datos
    
    FLUJO DE DATOS:
    Usuario ‚Üí Interfaz Web ‚Üí Procesamiento ‚Üí ML Model ‚Üí Respuesta ‚Üí Usuario
           ‚Üí Chatbot ‚Üí NLP ‚Üí Contexto ‚Üí Clasificaci√≥n ‚Üí Recomendaci√≥n ‚Üí
    
    CASOS DE USO SOPORTADOS:
    - Clasificaci√≥n individual de casos m√©dicos
    - Conversaciones interactivas sobre s√≠ntomas
    - An√°lisis epidemiol√≥gico en tiempo real
    - Generaci√≥n de reportes institucionales
    """
    
    def __init__(self):
        """
        CONSTRUCTOR - Inicializaci√≥n de la aplicaci√≥n web m√©dica
        
        PROP√ìSITO:
        Configura el estado inicial de la aplicaci√≥n, establece metadatos
        del sistema e inicializa estructuras para manejo de sesiones m√∫ltiples.
        
        JUSTIFICACI√ìN:
        - Metadatos del sistema para trazabilidad y auditor√≠a
        - Componentes None hasta lazy loading (optimizaci√≥n de memoria)
        - Diccionario de conversaciones para manejo de estado por usuario
        - Contador de sesiones para identificadores √∫nicos
        """
        # =============================================================================
        # METADATOS DE LA APLICACI√ìN
        # =============================================================================
        self.title = "üßΩü§ñ bAImax 2.0 - Sistema Inteligente Interactivo"
        self.version = "2.0"                              # Versi√≥n del sistema
        self.desarrollado_por = "Equipo SENASOFT 2025"   # Identificaci√≥n del equipo
        
        # =============================================================================
        # COMPONENTES DEL SISTEMA - LAZY LOADING
        # =============================================================================
        # JUSTIFICACI√ìN: Inicializaci√≥n bajo demanda para optimizar recursos
        self.chatbot = None              # Motor conversacional (se inicializa al usar)
        self.learning_system = None      # Sistema de aprendizaje continuo
        self.clasificador = None         # Clasificador ML principal
        self.mapa_sistema = None         # Sistema de mapas geoespaciales
        self.graficas = None            # Generador de visualizaciones
        self.recomendador = None        # Motor de recomendaciones
        self.analyzer = None            # Analizador de patrones epidemiol√≥gicos
        
        # =============================================================================
        # SISTEMA DE GESTI√ìN DE SESIONES M√öLTIPLES
        # =============================================================================
        # JUSTIFICACI√ìN: Soporte para m√∫ltiples usuarios concurrentes en entorno m√©dico
        self.conversaciones_activas = {}    # Dict[session_id, conversacion_data]
        self.contador_sesiones = 0          # Generador de IDs √∫nicos de sesi√≥n
    
    def inicializar_sistema_completo(self):
        """
        üöÄ Inicializa todos los componentes de bAImax 2.0
        """
        print("üöÄ Inicializando bAImax 2.0 Sistema Completo...")
        
        try:
            # Sistema de aprendizaje continuo
            print("üß† Inicializando sistema de aprendizaje...")
            self.learning_system = bAImaxLearningSystem()
            self.learning_system.inicializar_sistema()
            
            # Chatbot inteligente
            print("ü§ñ Inicializando chatbot...")
            self.chatbot = bAImaxChatbot()
            self.chatbot.inicializar_sistema()
            
            # Componentes b√°sicos
            print("üìä Inicializando componentes b√°sicos...")
            self.clasificador = self.learning_system.clasificador
            self.analyzer = self.learning_system.analyzer
            self.mapa_sistema = bAImaxMapa()
            self.graficas = bAImaxGraficas()
            self.recomendador = bAImaxRecomendaciones()
            
            print("‚úÖ Todos los componentes de bAImax 2.0 inicializados")
            return True
            
        except Exception as e:
            print(f"‚ùå Error inicializando sistema: {e}")
            return False
    
    def generar_interfaz_chatbot_html(self):
        """
        üí¨ Genera la interfaz HTML del chatbot integrado
        """
        return f"""
        <div id="chatbot-container" style="position: fixed; bottom: 20px; right: 20px; width: 400px; height: 600px; 
             background: white; border-radius: 20px; box-shadow: 0 10px 30px rgba(0,0,0,0.3); 
             z-index: 1000; display: none; flex-direction: column;">
            
            <!-- Header del chatbot -->
            <div style="background: linear-gradient(45deg, #FF6B6B, #4ECDC4); color: white; 
                        padding: 15px 20px; border-radius: 20px 20px 0 0; display: flex; 
                        justify-content: space-between; align-items: center;">
                <div style="display: flex; align-items: center; gap: 10px;">
                    <div style="width: 12px; height: 12px; background: #00ff00; border-radius: 50%; 
                                box-shadow: 0 0 10px #00ff00;"></div>
                    <div>
                        <div style="font-weight: bold; font-size: 16px;">ü§ñ bAImax Assistant</div>
                        <div style="font-size: 12px; opacity: 0.9;">Asistente de Salud P√∫blica</div>
                    </div>
                </div>
                <button onclick="toggleChat()" style="background: none; border: none; color: white; 
                                                     font-size: 20px; cursor: pointer; padding: 5px;">‚úï</button>
            </div>
            
            <!-- √Årea de conversaci√≥n -->
            <div id="chat-messages" style="flex: 1; padding: 20px; overflow-y: auto; 
                                          background: #f8f9fa; max-height: 400px;">
                <div class="message bot-message">
                    <div class="avatar">ü§ñ</div>
                    <div class="text">
                        ¬°Hola! Soy bAImax, tu asistente inteligente de salud p√∫blica. 
                        ¬øEn qu√© puedo ayudarte hoy?
                    </div>
                </div>
            </div>
            
            <!-- √Årea de entrada -->
            <div style="padding: 15px; background: white; border-radius: 0 0 20px 20px; 
                        border-top: 1px solid #eee;">
                <div style="display: flex; gap: 10px; align-items: center;">
                    <input type="text" id="chat-input" placeholder="Escribe tu mensaje..." 
                           style="flex: 1; padding: 12px; border: 2px solid #ddd; border-radius: 25px; 
                                  outline: none; font-size: 14px;" 
                           onkeypress="handleChatKeyPress(event)">
                    <button onclick="sendMessage()" 
                            style="background: linear-gradient(45deg, #3498db, #2980b9); color: white; 
                                   border: none; border-radius: 50%; width: 45px; height: 45px; 
                                   cursor: pointer; display: flex; align-items: center; justify-content: center;
                                   transition: transform 0.3s;">
                        üöÄ
                    </button>
                </div>
                
                <!-- Botones de acci√≥n r√°pida -->
                <div style="margin-top: 10px; display: flex; gap: 5px; flex-wrap: wrap;">
                    <button class="quick-btn" onclick="quickMessage('Hola bAImax')">üëã Saludar</button>
                    <button class="quick-btn" onclick="quickMessage('Tengo un problema de salud')">üè• Reportar Problema</button>
                    <button class="quick-btn" onclick="quickMessage('Ver estad√≠sticas')">üìä Estad√≠sticas</button>
                </div>
            </div>
        </div>
        
        <!-- Bot√≥n flotante para abrir chat -->
        <div id="chat-toggle" onclick="toggleChat()" 
             style="position: fixed; bottom: 20px; right: 20px; width: 60px; height: 60px; 
                    background: linear-gradient(45deg, #FF6B6B, #4ECDC4); border-radius: 50%; 
                    display: flex; align-items: center; justify-content: center; cursor: pointer; 
                    box-shadow: 0 4px 20px rgba(0,0,0,0.3); z-index: 999; transition: transform 0.3s;"
             onmouseover="this.style.transform='scale(1.1)'" 
             onmouseout="this.style.transform='scale(1)'">
            <div style="color: white; font-size: 24px; font-weight: bold;">üí¨</div>
        </div>
        
        <style>
            .message {{
                display: flex;
                gap: 10px;
                margin-bottom: 15px;
                animation: fadeInUp 0.3s ease;
            }}
            
            .bot-message .avatar {{
                width: 35px;
                height: 35px;
                background: linear-gradient(45deg, #FF6B6B, #4ECDC4);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 16px;
                flex-shrink: 0;
            }}
            
            .user-message {{
                flex-direction: row-reverse;
            }}
            
            .user-message .avatar {{
                width: 35px;
                height: 35px;
                background: #3498db;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 16px;
                color: white;
                flex-shrink: 0;
            }}
            
            .bot-message .text {{
                background: white;
                padding: 12px 15px;
                border-radius: 20px 20px 20px 5px;
                max-width: 280px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                line-height: 1.4;
                font-size: 14px;
            }}
            
            .user-message .text {{
                background: #3498db;
                color: white;
                padding: 12px 15px;
                border-radius: 20px 20px 5px 20px;
                max-width: 280px;
                line-height: 1.4;
                font-size: 14px;
            }}
            
            .quick-btn {{
                background: #ecf0f1;
                border: none;
                padding: 6px 12px;
                border-radius: 15px;
                font-size: 12px;
                cursor: pointer;
                transition: all 0.3s;
            }}
            
            .quick-btn:hover {{
                background: #3498db;
                color: white;
                transform: translateY(-2px);
            }}
            
            @keyframes fadeInUp {{
                from {{ opacity: 0; transform: translateY(20px); }}
                to {{ opacity: 1; transform: translateY(0); }}
            }}
            
            /* Scrollbar personalizado para el chat */
            #chat-messages::-webkit-scrollbar {{
                width: 6px;
            }}
            
            #chat-messages::-webkit-scrollbar-track {{
                background: #f1f1f1;
                border-radius: 3px;
            }}
            
            #chat-messages::-webkit-scrollbar-thumb {{
                background: #3498db;
                border-radius: 3px;
            }}
        </style>
        """
    
    def generar_javascript_chatbot(self):
        """
        üíª Genera el JavaScript para la funcionalidad del chatbot
        """
        return """
        <script>
            let chatOpen = false;
            let sessionId = Date.now();
            
            // Funci√≥n para alternar la visibilidad del chat
            function toggleChat() {
                const chatContainer = document.getElementById('chatbot-container');
                const chatToggle = document.getElementById('chat-toggle');
                
                if (chatOpen) {
                    chatContainer.style.display = 'none';
                    chatToggle.style.display = 'flex';
                    chatOpen = false;
                } else {
                    chatContainer.style.display = 'flex';
                    chatToggle.style.display = 'none';
                    chatOpen = true;
                    
                    // Auto-focus en el input
                    document.getElementById('chat-input').focus();
                }
            }
            
            // Funci√≥n para enviar mensaje
            function sendMessage() {
                const input = document.getElementById('chat-input');
                const message = input.value.trim();
                
                if (message === '') return;
                
                // Agregar mensaje del usuario
                addMessage('user', message);
                
                // Limpiar input
                input.value = '';
                
                // Simular respuesta del bot (aqu√≠ se conectar√≠a con el backend)
                setTimeout(() => {
                    processBotResponse(message);
                }, 1000);
            }
            
            // Funci√≥n para procesar respuesta del bot
            function processBotResponse(userMessage) {
                let botResponse = '';
                const userMsg = userMessage.toLowerCase();
                
                // L√≥gica b√°sica de respuestas (simulada)
                if (userMsg.includes('hola') || userMsg.includes('hi')) {
                    botResponse = `¬°Hola! üëã Soy bAImax 2.0. Puedo ayudarte a reportar problemas de salud p√∫blica, buscar puntos de atenci√≥n y m√°s. ¬øEn qu√© puedo asistirte?`;
                } 
                else if (userMsg.includes('problema') || userMsg.includes('reportar')) {
                    botResponse = `üè• Entiendo que tienes un problema de salud p√∫blica para reportar. Para ayudarte mejor, ¬øme podr√≠as decir:
                    
1. ¬øQu√© tipo de problema es? (m√©dicos, agua, basura, seguridad, etc.)
2. ¬øEn qu√© ciudad te encuentras?

Por ejemplo: "Faltan m√©dicos en Bogot√°"`;
                }
                else if (userMsg.includes('m√©dico') || userMsg.includes('doctor') || userMsg.includes('hospital')) {
                    const ciudades = ['bogot√°', 'medell√≠n', 'cali', 'barranquilla'];
                    let ciudadDetectada = 'tu ciudad';
                    
                    for (let ciudad of ciudades) {
                        if (userMsg.includes(ciudad)) {
                            ciudadDetectada = ciudad.charAt(0).toUpperCase() + ciudad.slice(1);
                            break;
                        }
                    }
                    
                    botResponse = `üî¥ **Problema GRAVE detectado: Falta de personal m√©dico**
                    
üìç **Ubicaci√≥n:** ${ciudadDetectada}
üìä **Confianza IA:** 87%

üéØ **Recomendaciones inmediatas:**
1. üè• Hospital Universitario - Tel: (1) 316-5000
2. üè• Centro de Salud Principal - Tel: (1) 220-9000
3. üìû L√≠nea de emergencias: 123

‚úÖ **Tu reporte ha sido registrado** y contribuir√° a mejorar el sistema.

¬øNecesitas m√°s informaci√≥n sobre alg√∫n punto de atenci√≥n?`;
                }
                else if (userMsg.includes('agua') || userMsg.includes('potable')) {
                    botResponse = `üü° **Problema MODERADO detectado: Acceso a agua potable**
                    
üéØ **Puntos de atenci√≥n recomendados:**
1. üåä Acueducto Municipal - Tel: (1) 317-1000  
2. üèõÔ∏è Alcald√≠a Local - Tel: (1) 381-3000

Tu reporte ayudar√° a priorizar esta zona. ¬°Gracias!`;
                }
                else if (userMsg.includes('estad√≠stica') || userMsg.includes('datos')) {
                    botResponse = `üìä **Estad√≠sticas del Sistema bAImax:**

üìã **Dataset:** 100+ reportes procesados
ü§ñ **Precisi√≥n IA:** 55% y mejorando
üó∫Ô∏è **Cobertura:** 10 ciudades colombianas
üéØ **Recomendaciones:** 25+ puntos de atenci√≥n

üîÑ **Aprendizaje Continuo:** Cada reporte mejora nuestro sistema.

¬øTe interesa ver alg√∫n mapa o gr√°fica espec√≠fica?`;
                }
                else if (userMsg.includes('gracias') || userMsg.includes('adi√≥s')) {
                    botResponse = `¬°De nada! üòä Fue un placer ayudarte. Recuerda que bAImax siempre est√° aqu√≠ para asistirte con problemas de salud p√∫blica.

¬°Que tengas un excelente d√≠a! üåü

üí° **Tip:** Puedes volver a chatear conmigo cuando necesites reportar algo o buscar informaci√≥n.`;
                }
                else {
                    botResponse = `ü§ñ Entiendo tu mensaje. Como asistente especializado en salud p√∫blica, puedo ayudarte con:

‚úÖ Reportar problemas de salud
‚úÖ Buscar puntos de atenci√≥n m√©dica  
‚úÖ Ver estad√≠sticas de tu ciudad
‚úÖ Obtener recomendaciones

¬øPodr√≠as contarme m√°s espec√≠ficamente en qu√© puedo asistirte?`;
                }
                
                addMessage('bot', botResponse);
            }
            
            // Funci√≥n para agregar mensajes al chat
            function addMessage(sender, text) {
                const chatMessages = document.getElementById('chat-messages');
                
                const messageDiv = document.createElement('div');
                messageDiv.className = `message ${sender}-message`;
                
                const avatar = document.createElement('div');
                avatar.className = 'avatar';
                avatar.textContent = sender === 'bot' ? 'ü§ñ' : 'üë§';
                
                const textDiv = document.createElement('div');
                textDiv.className = 'text';
                textDiv.innerHTML = text.replace(/\\n/g, '<br>');
                
                messageDiv.appendChild(avatar);
                messageDiv.appendChild(textDiv);
                
                chatMessages.appendChild(messageDiv);
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }
            
            // Funci√≥n para mensajes r√°pidos
            function quickMessage(message) {
                document.getElementById('chat-input').value = message;
                sendMessage();
            }
            
            // Manejar Enter en el input
            function handleChatKeyPress(event) {
                if (event.key === 'Enter') {
                    sendMessage();
                }
            }
            
            // Inicializar cuando se carga la p√°gina
            document.addEventListener('DOMContentLoaded', function() {
                console.log('ü§ñ bAImax 2.0 Chatbot iniciado');
                
                // Mensaje de bienvenida despu√©s de 2 segundos
                setTimeout(() => {
                    if (!chatOpen) {
                        // Mostrar notificaci√≥n de chat disponible
                        showChatNotification();
                    }
                }, 2000);
            });
            
            // Funci√≥n para mostrar notificaci√≥n de chat
            function showChatNotification() {
                const toggleBtn = document.getElementById('chat-toggle');
                toggleBtn.style.animation = 'pulse 2s infinite';
                
                setTimeout(() => {
                    toggleBtn.style.animation = '';
                }, 6000);
            }
            
            // CSS para animaci√≥n de pulso
            const style = document.createElement('style');
            style.textContent = `
                @keyframes pulse {
                    0% { transform: scale(1); }
                    50% { transform: scale(1.15); }
                    100% { transform: scale(1); }
                }
            `;
            document.head.appendChild(style);
        </script>
        """
    
    def generar_seccion_interactiva(self):
        """
        üîÑ Genera la secci√≥n de funcionalidades interactivas
        """
        # Obtener estad√≠sticas del sistema de aprendizaje
        if self.learning_system:
            stats = self.learning_system.obtener_estadisticas_aprendizaje()
        else:
            stats = {
                'reportes': {'iniciales': 100, 'nuevos_total': 0},
                'modelo': {'precision_actual': 0.55, 'entrenamientos_realizados': 1}
            }
        
        return f"""
        <div class="content" id="interactivo">
            <div class="card">
                <h2>üöÄ bAImax 2.0 - Sistema Interactivo</h2>
                <p>Nueva generaci√≥n de bAImax con capacidades conversacionales y aprendizaje continuo en tiempo real.</p>
                
                <div class="alert" style="background: #e8f5e8; border-left: 5px solid #27ae60;">
                    <strong>üéâ ¬°NUEVO!</strong> Chatbot inteligente integrado con clasificaci√≥n autom√°tica y recomendaciones contextuales.
                </div>
                
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-number">2.0</div>
                        <div>Versi√≥n Sistema</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">{stats['reportes']['iniciales'] + stats['reportes']['nuevos_total']}</div>
                        <div>Reportes Procesados</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">{stats['modelo']['precision_actual']:.0%}</div>
                        <div>Precisi√≥n IA</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">{stats['modelo']['entrenamientos_realizados']}</div>
                        <div>Entrenamientos</div>
                    </div>
                </div>
                
                <h3>ü§ñ Funcionalidades Interactivas:</h3>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin: 20px 0;">
                    
                    <div class="card" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white;">
                        <h4>üí¨ Chatbot Conversacional</h4>
                        <ul style="text-align: left;">
                            <li>Conversaci√≥n natural en espa√±ol</li>
                            <li>Clasificaci√≥n autom√°tica de problemas</li>
                            <li>Recomendaciones en tiempo real</li>
                            <li>Detecci√≥n de ubicaci√≥n inteligente</li>
                        </ul>
                        <button onclick="toggleChat()" style="background: rgba(255,255,255,0.2); color: white; border: 2px solid white; padding: 10px 20px; border-radius: 25px; cursor: pointer; margin-top: 10px;">
                            üí¨ Abrir Chat
                        </button>
                    </div>
                    
                    <div class="card" style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); color: white;">
                        <h4>üß† Aprendizaje Continuo</h4>
                        <ul style="text-align: left;">
                            <li>Cada reporte mejora el sistema</li>
                            <li>Re-entrenamiento autom√°tico</li>
                            <li>Validaci√≥n inteligente de datos</li>
                            <li>M√©tricas de progreso en tiempo real</li>
                        </ul>
                        <div style="background: rgba(255,255,255,0.2); padding: 10px; border-radius: 10px; margin-top: 10px;">
                            <small>Pr√≥ximo re-entrenamiento: 3 reportes m√°s</small>
                        </div>
                    </div>
                    
                    <div class="card" style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); color: white;">
                        <h4>üîÑ Actualizaci√≥n Autom√°tica</h4>
                        <ul style="text-align: left;">
                            <li>Mapas se actualizan en tiempo real</li>
                            <li>Gr√°ficas din√°micas</li>
                            <li>Nuevos puntos de calor</li>
                            <li>Alertas geogr√°ficas</li>
                        </ul>
                        <div style="background: rgba(255,255,255,0.2); padding: 10px; border-radius: 10px; margin-top: 10px;">
                            <small>√öltima actualizaci√≥n: {datetime.now().strftime('%H:%M')}</small>
                        </div>
                    </div>
                    
                </div>
                
                <h3>üéØ C√≥mo Usar el Sistema Interactivo:</h3>
                
                <div class="demo-section">
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 15px;">
                        
                        <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; border-left: 4px solid #3498db;">
                            <h4>1Ô∏è‚É£ Abrir Chat</h4>
                            <p>Haz clic en el bot√≥n flotante üí¨ para iniciar conversaci√≥n con bAImax.</p>
                        </div>
                        
                        <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; border-left: 4px solid #e74c3c;">
                            <h4>2Ô∏è‚É£ Describir Problema</h4>
                            <p>Cu√©ntale a bAImax tu problema: "Faltan m√©dicos en Bogot√°"</p>
                        </div>
                        
                        <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; border-left: 4px solid #f39c12;">
                            <h4>3Ô∏è‚É£ Recibir An√°lisis</h4>
                            <p>El sistema clasifica autom√°ticamente y da recomendaciones.</p>
                        </div>
                        
                        <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; border-left: 4px solid #27ae60;">
                            <h4>4Ô∏è‚É£ Contribuir al Sistema</h4>
                            <p>Tu reporte mejora autom√°ticamente la IA para futuros usuarios.</p>
                        </div>
                        
                    </div>
                </div>
                
                <h3>üìä Ventajas del Sistema 2.0:</h3>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px; margin: 20px 0;">
                    
                    <div style="text-align: center; padding: 20px;">
                        <div style="font-size: 3em; margin-bottom: 10px;">‚ö°</div>
                        <h4>Respuesta Inmediata</h4>
                        <p>Clasificaci√≥n y recomendaciones en menos de 2 segundos</p>
                    </div>
                    
                    <div style="text-align: center; padding: 20px;">
                        <div style="font-size: 3em; margin-bottom: 10px;">üß†</div>
                        <h4>M√°s Inteligente</h4>
                        <p>Aprende continuamente de cada interacci√≥n</p>
                    </div>
                    
                    <div style="text-align: center; padding: 20px;">
                        <div style="font-size: 3em; margin-bottom: 10px;">üéØ</div>
                        <h4>M√°s Preciso</h4>
                        <p>Recomendaciones contextuales seg√∫n ubicaci√≥n</p>
                    </div>
                    
                    <div style="text-align: center; padding: 20px;">
                        <div style="font-size: 3em; margin-bottom: 10px;">üë•</div>
                        <h4>M√°s Humano</h4>
                        <p>Conversaci√≥n natural y emp√°tica</p>
                    </div>
                    
                </div>
                
            </div>
        </div>
        """
    
    def generar_aplicacion_20_completa(self):
        """
        üåê Genera la aplicaci√≥n web completa bAImax 2.0
        """
        # Generar contenido b√°sico de la aplicaci√≥n original
        from baimax_app import bAImaxWebApp
        app_base = bAImaxWebApp()
        app_base.inicializar_componentes()
        
        html_completo = (
            app_base.generar_html_header().replace("bAImax - Sistema H√≠brido", "bAImax 2.0 - Sistema Inteligente Interactivo") +
            app_base.generar_seccion_inicio() +
            self.generar_seccion_interactiva() +
            app_base.generar_seccion_clasificador() +
            app_base.generar_seccion_mapas() +
            app_base.generar_seccion_graficas() +
            app_base.generar_seccion_recomendaciones() +
            app_base.generar_seccion_dataset() +
            self.generar_interfaz_chatbot_html() +
            self.generar_javascript_chatbot() +
            app_base.generar_html_footer().replace("bAImax", "bAImax 2.0")
        )
        
        # Actualizar navegaci√≥n para incluir secci√≥n interactiva
        html_completo = html_completo.replace(
            '<a href="#inicio" class="nav-item">üè† Inicio</a>',
            '<a href="#inicio" class="nav-item">üè† Inicio</a>\n                    <a href="#interactivo" class="nav-item">üöÄ Interactivo 2.0</a>'
        )
        
        # Guardar archivo HTML
        with open('baimax_20_app.html', 'w', encoding='utf-8') as f:
            f.write(html_completo)
        
        print("üåê Aplicaci√≥n bAImax 2.0 generada: baimax_20_app.html")
        return 'baimax_20_app.html'
    
    def ejecutar_aplicacion_20(self):
        """
        üöÄ Ejecuta la aplicaci√≥n completa bAImax 2.0
        """
        print("üöÄ INICIANDO bAImax 2.0 - Sistema Inteligente Interactivo")
        print("=" * 70)
        
        # Inicializar sistema completo
        if not self.inicializar_sistema_completo():
            print("‚ùå Error al inicializar componentes")
            return False
        
        # Generar todos los recursos existentes
        print("\nüìä Generando visualizaciones actualizadas...")
        
        # Generar mapas
        mapa_completo = self.mapa_sistema.crear_mapa_completo()
        mapa_clusters = self.mapa_sistema.crear_mapa_clusters()
        mapa_calor = self.mapa_sistema.crear_mapa_calor()
        
        self.mapa_sistema.guardar_mapa(mapa_completo, 'baimax_mapa_completo.html')
        self.mapa_sistema.guardar_mapa(mapa_clusters, 'baimax_mapa_clusters.html')
        self.mapa_sistema.guardar_mapa(mapa_calor, 'baimax_mapa_calor.html')
        
        # Generar gr√°ficas
        self.graficas.guardar_graficas('html')
        
        # Generar aplicaci√≥n web 2.0
        print("\nüåê Generando aplicaci√≥n bAImax 2.0...")
        archivo_app = self.generar_aplicacion_20_completa()
        
        # Mostrar estad√≠sticas del sistema de aprendizaje
        if self.learning_system:
            stats = self.learning_system.obtener_estadisticas_aprendizaje()
            print(f"\nüìä Estad√≠sticas del Sistema de Aprendizaje:")
            print(f"   üìã Reportes iniciales: {stats['reportes']['iniciales']}")
            print(f"   ‚ûï Reportes nuevos: {stats['reportes']['nuevos_total']}")
            print(f"   üéØ Precisi√≥n actual: {stats['modelo']['precision_actual']:.1%}")
            print(f"   üîÑ Entrenamientos: {stats['modelo']['entrenamientos_realizados']}")
        
        # Abrir en navegador
        print(f"\nüéâ ¬°bAImax 2.0 est√° listo!")
        print(f"üìÅ Archivo principal: {archivo_app}")
        print("\nüöÄ Abriendo en navegador...")
        
        # Intentar abrir en navegador
        try:
            webbrowser.open(f'file://{os.path.abspath(archivo_app)}')
        except:
            print(f"‚ö†Ô∏è No se pudo abrir autom√°ticamente. Abre manualmente: {os.path.abspath(archivo_app)}")
        
        print("\n‚ú® ¬°bAImax 2.0 funcionando perfectamente! ‚ú®")
        print("üí¨ ¬°Prueba el chatbot haciendo clic en el bot√≥n flotante!")
        print("ü§ñ El sistema aprender√° de cada conversaci√≥n")
        
        return True

# Funci√≥n principal para ejecutar bAImax 2.0
def main_baimax_20():
    """
    üé≠ Funci√≥n principal para ejecutar bAImax 2.0
    """
    app = bAImaxApp20()
    return app.ejecutar_aplicacion_20()

if __name__ == "__main__":
    main_baimax_20()